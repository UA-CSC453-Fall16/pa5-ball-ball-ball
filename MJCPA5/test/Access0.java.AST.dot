digraph {
6  [label = "C"];
5 -> 6
5  [label = " Invoke test0  "];
4 -> 5
4  [label = "Delay"];
3 -> 4
3  [label = "Body"];
2 -> 3
2  [label = "MainClass"];
13  [label = " IntArrayType deep; "];
14  [label = " ClassType D mine; "];
15  [label = " ClassType D mine2; "];
12 -> 15
12 -> 14
12 -> 13
12  [label = "VariableDeclarations"];
19  [label = "VariableDeclarations"];
26  [label = "IntLiteral 6"];
25 -> 26
25  [label = "IntArrayInstance"];
24 -> 25
24  [label = "ParenExp"];
29  [label = "IntLiteral 0"];
23 -> 29
23 -> 24
23  [label = "ArrayAccess: left[right]"];
22 -> 23
22  [label = "Return"];
21 -> 22
21  [label = "Body"];
18 -> 21
18 -> 19
18  [label = "Method: public TS [] IntType str ()"];
35  [label = "VariableDeclarations"];
40  [label = "IntLiteral 5"];
39 -> 40
39  [label = "IntArrayInstance"];
38 -> 39
38  [label = "Assignment: deep = "];
44  [label = "IntLiteral 0"];
45  [label = "IntLiteral 3"];
43 -> 45
43 -> 44
43  [label = "deepArray Assignment: [left] = right "];
48  [label = " Id (deep) "];
47 -> 48
47  [label = "Return"];
37 -> 47
37 -> 43
37 -> 38
37  [label = "Body"];
34 -> 37
34 -> 35
34  [label = "Method: public TS [] IntArrayType str ()"];
53  [label = "VariableDeclarations"];
57  [label = "D"];
56 -> 57
56  [label = "Assignment: mine2 = "];
60  [label = " Id (mine2) "];
59 -> 60
59  [label = "Return"];
55 -> 59
55 -> 56
55  [label = "Body"];
52 -> 55
52 -> 53
52  [label = "Method: public TS [] (ClassType D) str ()"];
66  [label = " IntType a; "];
67  [label = " IntType b; "];
68  [label = " IntType c; "];
69  [label = " IntType d; "];
65 -> 69
65 -> 68
65 -> 67
65 -> 66
65  [label = "VariableDeclarations"];
73  [label = "this"];
72 -> 73
72  [label = " Invoke test2  "];
76  [label = "IntLiteral 1"];
77  [label = "IntLiteral 4"];
75 -> 77
75 -> 76
75  [label = "deepArray Assignment: [left] = right "];
80  [label = "D"];
79 -> 80
79  [label = "Assignment: mine = "];
86  [label = "this"];
85 -> 86
85  [label = " Invoke test3  "];
84 -> 85
84  [label = " Invoke init  "];
83 -> 84
83  [label = "ArrayLength"];
82 -> 83
82  [label = "Assignment: a = "];
94  [label = "this"];
93 -> 94
93  [label = " Invoke test2  "];
96  [label = " Id (a) "];
92 -> 96
92 -> 93
92  [label = "ArrayAccess: left[right]"];
91 -> 92
91  [label = "Assignment: d = "];
71 -> 91
71 -> 82
71 -> 79
71 -> 75
71 -> 72
71  [label = "Body"];
64 -> 71
64 -> 65
64  [label = "Method: public TS [] VoidType str ()"];
17 -> 64
17 -> 52
17 -> 34
17 -> 18
17  [label = "MethodDeclarations"];
11 -> 17
11 -> 12
11  [label = "Class C"];
105  [label = " IntType vari; "];
106  [label = " IntArrayType dArr; "];
104 -> 106
104 -> 105
104  [label = "VariableDeclarations"];
110  [label = "VariableDeclarations"];
114  [label = "IntLiteral 3"];
113 -> 114
113  [label = "Assignment: vari = "];
112 -> 113
112  [label = "Body"];
109 -> 112
109 -> 110
109  [label = "Method: public TS [] VoidType str ()"];
119  [label = "VariableDeclarations"];
124  [label = "IntLiteral 3"];
123 -> 124
123  [label = "IntArrayInstance"];
122 -> 123
122  [label = "Assignment: dArr = "];
128  [label = " Id (dArr) "];
127 -> 128
127  [label = "Return"];
121 -> 127
121 -> 122
121  [label = "Body"];
118 -> 121
118 -> 119
118  [label = "Method: public TS [] IntArrayType str ()"];
134  [label = " ClassType D soHard; "];
133 -> 134
133  [label = "VariableDeclarations"];
138  [label = "D"];
137 -> 138
137  [label = "Assignment: soHard = "];
141  [label = " Id (soHard) "];
140 -> 141
140  [label = " Invoke set  "];
144  [label = " Id (soHard) "];
143 -> 144
143  [label = "Return"];
136 -> 143
136 -> 140
136 -> 137
136  [label = "Body"];
132 -> 136
132 -> 133
132  [label = "Method: public TS [] (ClassType D) str ()"];
108 -> 132
108 -> 118
108 -> 109
108  [label = "MethodDeclarations"];
103 -> 108
103 -> 104
103  [label = "Class D"];
1 -> 103
1 -> 11
1 -> 2
1  [label = "Prog"];
}
