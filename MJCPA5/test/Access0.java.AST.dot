digraph {
6  [label = "C"];
5 -> 6
5  [label = " Invoke test0  "];
4 -> 5
4  [label = "Delay"];
3 -> 4
3  [label = "Body"];
2 -> 3
2  [label = "MainClass"];
13  [label = " IntArrayType deep; "];
14  [label = " ClassType D mine; "];
15  [label = " ClassType D mine2; "];
12 -> 15
12 -> 14
12 -> 13
12  [label = "VariableDeclarations"];
19  [label = "VariableDeclarations"];
25  [label = "IntLiteral 6"];
24 -> 25
24  [label = "IntArrayInstance"];
27  [label = "IntLiteral 0"];
23 -> 27
23 -> 24
23  [label = "ArrayAccess: left[right]"];
22 -> 23
22  [label = "Return"];
21 -> 22
21  [label = "Body"];
18 -> 21
18 -> 19
18  [label = "Method: public TS [] IntType str ()"];
33  [label = "VariableDeclarations"];
38  [label = "IntLiteral 5"];
37 -> 38
37  [label = "IntArrayInstance"];
36 -> 37
36  [label = "Assignment: deep = "];
42  [label = "IntLiteral 0"];
43  [label = "IntLiteral 3"];
41 -> 43
41 -> 42
41  [label = "deepArray Assignment: [left] = right "];
46  [label = " Id (deep) "];
45 -> 46
45  [label = "Return"];
35 -> 45
35 -> 41
35 -> 36
35  [label = "Body"];
32 -> 35
32 -> 33
32  [label = "Method: public TS [] IntArrayType str ()"];
51  [label = "VariableDeclarations"];
55  [label = "D"];
54 -> 55
54  [label = "Assignment: mine2 = "];
58  [label = " Id (mine2) "];
57 -> 58
57  [label = "Return"];
53 -> 57
53 -> 54
53  [label = "Body"];
50 -> 53
50 -> 51
50  [label = "Method: public TS [] (ClassType D) str ()"];
64  [label = " IntType a; "];
65  [label = " IntType b; "];
66  [label = " IntType c; "];
67  [label = " IntType d; "];
63 -> 67
63 -> 66
63 -> 65
63 -> 64
63  [label = "VariableDeclarations"];
71  [label = "this"];
70 -> 71
70  [label = " Invoke test2  "];
74  [label = "IntLiteral 1"];
75  [label = "IntLiteral 4"];
73 -> 75
73 -> 74
73  [label = "deepArray Assignment: [left] = right "];
78  [label = "D"];
77 -> 78
77  [label = "Assignment: mine = "];
84  [label = "this"];
83 -> 84
83  [label = " Invoke test3  "];
82 -> 83
82  [label = " Invoke init  "];
81 -> 82
81  [label = "ArrayLength"];
80 -> 81
80  [label = "Assignment: a = "];
92  [label = "this"];
91 -> 92
91  [label = " Invoke test2  "];
94  [label = " Id (a) "];
90 -> 94
90 -> 91
90  [label = "ArrayAccess: left[right]"];
89 -> 90
89  [label = "Assignment: d = "];
69 -> 89
69 -> 80
69 -> 77
69 -> 73
69 -> 70
69  [label = "Body"];
62 -> 69
62 -> 63
62  [label = "Method: public TS [] VoidType str ()"];
17 -> 62
17 -> 50
17 -> 32
17 -> 18
17  [label = "MethodDeclarations"];
11 -> 17
11 -> 12
11  [label = "Class C"];
103  [label = " IntType vari; "];
104  [label = " IntArrayType dArr; "];
102 -> 104
102 -> 103
102  [label = "VariableDeclarations"];
108  [label = "VariableDeclarations"];
112  [label = "IntLiteral 3"];
111 -> 112
111  [label = "Assignment: vari = "];
110 -> 111
110  [label = "Body"];
107 -> 110
107 -> 108
107  [label = "Method: public TS [] VoidType str ()"];
117  [label = "VariableDeclarations"];
122  [label = "IntLiteral 3"];
121 -> 122
121  [label = "IntArrayInstance"];
120 -> 121
120  [label = "Assignment: dArr = "];
126  [label = " Id (dArr) "];
125 -> 126
125  [label = "Return"];
119 -> 125
119 -> 120
119  [label = "Body"];
116 -> 119
116 -> 117
116  [label = "Method: public TS [] IntArrayType str ()"];
132  [label = " ClassType D soHard; "];
131 -> 132
131  [label = "VariableDeclarations"];
136  [label = "D"];
135 -> 136
135  [label = "Assignment: soHard = "];
139  [label = " Id (soHard) "];
138 -> 139
138  [label = " Invoke set  "];
142  [label = " Id (soHard) "];
141 -> 142
141  [label = "Return"];
134 -> 141
134 -> 138
134 -> 135
134  [label = "Body"];
130 -> 134
130 -> 131
130  [label = "Method: public TS [] (ClassType D) str ()"];
106 -> 130
106 -> 116
106 -> 107
106  [label = "MethodDeclarations"];
101 -> 106
101 -> 102
101  [label = "Class D"];
1 -> 101
1 -> 11
1 -> 2
1  [label = "Prog"];
}
