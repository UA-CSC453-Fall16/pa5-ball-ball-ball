
==================== FINAL INTERFACE ====================
2016-12-02 01:11:44.277886875 UTC

interface main@main:Dot 8001
  interface hash: ccc8f65186f3ff1814026fb26e1e3659
  ABI hash: 6dd555ded35e89b7f87445468ab860aa
  export-list hash: ba03f7aae79420c35d1b679332427461
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 6ea86ecbb747c8bfd1b624d46b10840a
  sig of: Nothing
  used TH splices: False
  where
exports:
  Dot.astdotviz_rec
  Dot.genDot
  Dot.visitChildren
module dependencies: Util
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  Util 584e30b3c8003828425244522b124edd
  exports: 6ebad5c4a934f78d2a8da097b4f64c2d
  AST 88b1d8d104bedf4e10abe56758f4c48a
  Add db81475a2c126d7c611d0f8b2e4f7f52
  Body d153fc4cffa24358844f2c9d3923ca5d
  Boolean e739b86a037718e2330f9cdaaafce984
  ButtonLiteral 4ad405580f89d5ea0c4b62a058c49b6a
  ByteCast cb6fb553e8a5070eabaff85fc6f90aba
  CheckButton 53ed53cdc30dd0aa807c1a76fb02f9f6
  Class a29d9e4aa2277ed1177c891a7d9c6fa2
  ColorLiteral a09646b113ce60663aec427bcb52f846
  Delay 5b82435487e812bf6960759028ebb880
  Epsilon 0e2368b12583e00d4e901fa8122311bd
  GetPixel 208060c1089d54665dccfbbb8d583336
  Identifier f478eb751275069f15e7e4de47d2d2da
  If e27db102bf0056b79af21adde1bf36ce
  Instance 1f8b789ceb1dc9c8b52369069df392c1
  IntLiteral 144ca1c2ffe233b0c950c624e8c02dcb
  Invoke 394424b76f631cbc504d27941f93f06d
  LessThan 04de00e6959fa80e021133802ba7d0a3
  LogicalAnd f1b595ca577ba5d451a0424a7ce6f3c7
  LogicalEqual ca207935a5bed546edc0c82892c1b286
  LogicalNot f72502ca7b096bc637bacc2d6d74d751
  MainClass c643e2cf340b183c486690155e63d5b6
  Method e89e84b8d9a0031f06f1abb3017f45ad
  Mul 732a40472d91b8d45034e578d3314e1f
  ParenExp 86473db8b42f2e0d4008971bbffc96bb
  Prog 05b8d730c89ff5259eebdd22d173c52a
  Return c9835deb9c6b930c6065b5d2934971ae
  SetPixel 5c654e2487eb0cc6617806266d24b80d
  Sub e11a71115abf5a41f92f1cadd41f310a
  ToneLiteral 808f067228df16294222666189597a3a
  ToneStart fc7760204e63c5e8b6673dfbf71619c0
  UnaryMinus 6ddef5ed6239e224ccba8881f3a776f9
  While 89f69faf2123b482645b8da033ba9438
b5125bc0f4d5b30f9876bc1289845996
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Dot.$trModule2 Dot.$trModule1) -}
0d8ef118f5c38588888d2064d96dd300
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Dot"#) -}
0cddc2ebea3d782ba6571656ae38e6c6
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
45574790ef0a3d930551f51a479826b5
  $wastdotviz_rec ::
    GHC.Types.Int -> Util.AST -> (# GHC.Types.Int, GHC.Base.String #)
  {- Arity: 2, Strictness: <L,U(U)><S,1*U>, Inline: [0] -}
b8cb2b5e2612e2a7584265c1dea95538
  $wvisitChildren ::
    GHC.Types.Int
    -> GHC.Types.Int
    -> [Util.AST]
    -> (# GHC.Types.Int, GHC.Base.String #)
  {- Arity: 3, Strictness: <L,U(U)><L,U(U)><S,1*U>, Inline: [0] -}
2bb3414334628fb71446a2c465b3c4c1
  astdotviz_rec ::
    GHC.Types.Int
    -> GHC.Types.Int -> Util.AST -> (GHC.Types.Int, GHC.Base.String)
  {- Arity: 3, Strictness: <L,A><L,U(U)><S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: GHC.Types.Int) (w2 :: Util.AST) ->
                 case Dot.$wastdotviz_rec w1 w2 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
22a87af2c7f72b5e6be8978908dc8d18
  genDot :: Util.AST -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (ast :: Util.AST) ->
                 GHC.CString.unpackAppendCString#
                   "digraph {\n"#
                   (case Dot.$wastdotviz_rec Dot.genDot2 ast of ww { (#,#) ww1 ww2 ->
                    GHC.Base.++ @ GHC.Types.Char ww2 Dot.genDot1 })) -}
e94e7d9569fa0e2b3a7d3cf7195b98f5
  genDot1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
83caa1b605b585d3996b17ce8643c09d
  genDot2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
88c08807b12aec840c91ee70ebdcb39b
  visitChildren ::
    GHC.Types.Int
    -> GHC.Types.Int -> [Util.AST] -> (GHC.Types.Int, GHC.Base.String)
  {- Arity: 3, Strictness: <L,U(U)><L,U(U)><S,1*U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: GHC.Types.Int) (w2 :: [Util.AST]) ->
                 case Dot.$wvisitChildren w w1 w2 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

