
==================== FINAL INTERFACE ====================
2016-12-02 01:11:50.896265459 UTC

interface main@main:AVRGen 8001
  interface hash: c05a5dcd386b41334f0c590dda87a8d7
  ABI hash: b33ac6ff15e5dbe07854d3876e5fce4b
  export-list hash: fbcf6dba1a337f26b0d11621d5814113
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 6ea86ecbb747c8bfd1b624d46b10840a
  sig of: Nothing
  used TH splices: False
  where
exports:
  AVRGen.avrCodeGen
  AVRGen.avrPop
  AVRGen.correctName
  AVRGen.evaluateParams
  AVRGen.functionLoadParams
  AVRGen.helpLoadMethodReturnValue
  AVRGen.helpStoreMethodParams
  AVRGen.numBytesInParameters
  AVRGen.promote
  AVRGen.promoteByteToInt
  AVRGen.promoteByteToInt'
  AVRGen.setUpFunctionCall
module dependencies: SymbolTable TypeCheck Util
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.0.0*
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  SymbolTable b90fb4c94fd358f974b00611e879e3b3
  exports: 5fca622cbe27c3102def4ca0ee895dcb
  SymTab c65c491812df1aea296ace50350f3071
  SymbolTable d92ad99340eafabd98bc2c924485b05f
  lookupParamOffset 17ed12b6ec11a99e22a8d3d77f6b3d3d
  lookupTypeSig 098638e55d8771e0d162a6a86d8b771a
  popScope 51a115c819ed44a7f1f386f664da0edc
  pushScope d17c24900a5da636e56d039308b8dc7a
  setProgScope 7696ad981d4b72d6273e3be73da01cc4
import  -/  TypeCheck 5e431c127d35de3b7ed8eef8b47ba496
  exports: cd233e695f946e972b45b525ef28d4a0
  tCheck 30b67dc4bab039696e2a7b376fb25ec0
import  -/  Util 584e30b3c8003828425244522b124edd
  exports: 6ebad5c4a934f78d2a8da097b4f64c2d
  AST 88b1d8d104bedf4e10abe56758f4c48a
  Add db81475a2c126d7c611d0f8b2e4f7f52
  Body d153fc4cffa24358844f2c9d3923ca5d
  Boolean e739b86a037718e2330f9cdaaafce984
  BooleanType 661eea5c4b454ea3ccf4a04e40879c26
  ButtonLiteral 4ad405580f89d5ea0c4b62a058c49b6a
  ByteCast cb6fb553e8a5070eabaff85fc6f90aba
  ByteType 2dbfbae615c60d81b613b3a7182ee089
  CheckButton 53ed53cdc30dd0aa807c1a76fb02f9f6
  Class a29d9e4aa2277ed1177c891a7d9c6fa2
  ColorLiteral a09646b113ce60663aec427bcb52f846
  Delay 5b82435487e812bf6960759028ebb880
  Epsilon 0e2368b12583e00d4e901fa8122311bd
  GetPixel 208060c1089d54665dccfbbb8d583336
  Identifier f478eb751275069f15e7e4de47d2d2da
  If e27db102bf0056b79af21adde1bf36ce
  Instance 1f8b789ceb1dc9c8b52369069df392c1
  IntLiteral 144ca1c2ffe233b0c950c624e8c02dcb
  IntType f24052e5e6d03b5090f1567cdf154497
  Invoke 394424b76f631cbc504d27941f93f06d
  LessThan 04de00e6959fa80e021133802ba7d0a3
  LogicalAnd f1b595ca577ba5d451a0424a7ce6f3c7
  LogicalEqual ca207935a5bed546edc0c82892c1b286
  LogicalNot f72502ca7b096bc637bacc2d6d74d751
  MainClass c643e2cf340b183c486690155e63d5b6
  MeggyColorType 73f19f4b58afeeb85f71476c58ea1009
  Method e89e84b8d9a0031f06f1abb3017f45ad
  Mul 732a40472d91b8d45034e578d3314e1f
  ParenExp 86473db8b42f2e0d4008971bbffc96bb
  Prog 05b8d730c89ff5259eebdd22d173c52a
  Return c9835deb9c6b930c6065b5d2934971ae
  SetPixel 5c654e2487eb0cc6617806266d24b80d
  Sub e11a71115abf5a41f92f1cadd41f310a
  TS 17e2bdd4b8adc4f87694194faae61e6b
  ToneLiteral 808f067228df16294222666189597a3a
  ToneStart fc7760204e63c5e8b6673dfbf71619c0
  Type b11fd09e544b732e5075f4cb20dd6d55
  UnaryMinus 6ddef5ed6239e224ccba8881f3a776f9
  VoidType bb628c644700193b80f763345c48d96e
  While 89f69faf2123b482645b8da033ba9438
  footer 0ef4b2f963519743f3b4e54014026887
  header c2ba5ad3d39353f7f80f48efeb4425dd
5b282318806337e1f39942dfbde4440f
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   AVRGen.$trModule2
                   AVRGen.$trModule1) -}
164c1366a6cdf18b222822b2439a199e
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "AVRGen"#) -}
1cb0301bf5b013327cb42e7287d6cc16
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
7b32b650525edda0ee93cda909765a23
  $wavrCodeGen ::
    Util.AST
    -> SymbolTable.SymbolTable
    -> GHC.Types.Int
    -> (# GHC.Types.Int, GHC.Base.String #)
  {- Arity: 3, Strictness: <S,1*U><L,U(U,U)><L,U>, Inline: [0] -}
83cd7b366e2e6843bf3dba2828cf5a85
  $wevaluateParams ::
    [Util.AST]
    -> SymbolTable.SymbolTable
    -> GHC.Types.Int
    -> (# GHC.Types.Int, GHC.Base.String #)
  {- Arity: 3, Strictness: <S,1*U><L,U(U,U)><L,U>, Inline: [0] -}
d00a65e9d72af34448255fc10e20116d
  $wnumBytesInParameters ::
    [(GHC.Base.String, Util.Type)] -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>, Inline: [0] -}
b9383e5e404bcba5250e5f5ca778b1a9
  $wpromoteByteToInt :: GHC.Types.Int -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,1*U(U)>, Inline: [0] -}
9e3b3a76d482781f96e90fd0a229cb86
  $wpromoteByteToInt' :: GHC.Types.Int -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,1*U(U)>, Inline: [0] -}
546c9647c7c9d24d7970c7aedc273eac
  $wsetUpFunctionCall ::
    SymbolTable.Scope -> [GHC.Base.String] -> GHC.Base.String
  {- Arity: 2, Strictness: <S,U><S,U>, Inline: [0] -}
d88db7f7c0806550e325da326931553e
  avrCodeGen ::
    (Util.AST, SymbolTable.SymbolTable)
    -> GHC.Types.Int -> (GHC.Types.Int, GHC.Base.String)
  {- Arity: 2, Strictness: <S(SL),1*U(1*U,U(U,U))><L,U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: (Util.AST, SymbolTable.SymbolTable))
                   (w1 :: GHC.Types.Int) ->
                 case w of ww { (,) ww1 ww2 ->
                 case AVRGen.$wavrCodeGen ww1 ww2 w1 of ww3 { (#,#) ww4 ww5 ->
                 (ww4, ww5) } }) -}
40d24d01094172bd19bcb5cf9d5810d9
  avrPop ::
    Util.Type -> GHC.Types.Int -> GHC.Types.Int -> GHC.Base.String
  {- Arity: 3, Strictness: <S,1*U><L,1*U(U)><L,1*U(U)> -}
2ea7be731a6e859b670c81bad86fb168
  correctName :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
1e03da7c53666789069bcb2f9b7f4f79
  evaluateParams ::
    ([Util.AST], SymbolTable.SymbolTable)
    -> GHC.Base.String
    -> GHC.Types.Int
    -> (GHC.Types.Int, GHC.Base.String)
  {- Arity: 3, Strictness: <S(SL),1*U(1*U,U(U,U))><L,A><L,U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: ([Util.AST], SymbolTable.SymbolTable))
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Types.Int) ->
                 case w of ww { (,) ww1 ww2 ->
                 case AVRGen.$wevaluateParams ww1 ww2 w2 of ww3 { (#,#) ww4 ww5 ->
                 (ww4, ww5) } }) -}
2965d402324e1644dd937607f0413888
  functionLoadParams ::
    [(GHC.Base.String, Util.Type)] -> GHC.Types.Int -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U(U)> -}
d91133bff56d16bba82fbc0c780edd3a
  helpLoadMethodReturnValue :: Util.Type -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ret_type :: Util.Type) ->
                 case ret_type of wild {
                   DEFAULT -> AVRGen.helpLoadMethodReturnValue3
                   Util.IntType -> AVRGen.helpLoadMethodReturnValue2
                   Util.VoidType -> AVRGen.helpLoadMethodReturnValue1 }) -}
95be2657ae75bd548b087fefc9eb3846
  helpLoadMethodReturnValue1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "    # Nothing to return -> Void return type\n"#) -}
ab2abd8ccb53c209ab15af9bcc322636
  helpLoadMethodReturnValue2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "    # load a two byte expression off stack\n\
                   \    pop r24\n\
                   \    pop r25\n"#) -}
47f7a9b12c999759f34f913aa63d804b
  helpLoadMethodReturnValue3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "    # load a one byte expression off stack\n\
                   \    pop r24\n"#) -}
f5c4eb3eb4651aedad8375755c61a320
  helpStoreMethodParams ::
    [(GHC.Base.String, Util.Type)]
    -> SymbolTable.SymbolTable -> GHC.Types.Int -> GHC.Base.String
  {- Arity: 3, Strictness: <S,1*U><L,1*U(U,U)><L,1*U(U)> -}
262315887053834c7ac854f333411011
  numBytesInParameters ::
    [(GHC.Base.String, Util.Type)] -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U(U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: [(GHC.Base.String, Util.Type)]) (w1 :: GHC.Types.Int) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 case AVRGen.$wnumBytesInParameters w ww1 of ww2 { DEFAULT ->
                 GHC.Types.I# ww2 } }) -}
b16600a550ba5b9a6dd4be5c0d4be9bb
  promote :: GHC.Types.Int -> GHC.Types.Int -> GHC.Base.String
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U(U)> -}
3f267e6ba36fa78d6071ae458bd3d798
  promoteByteToInt :: Util.AST -> GHC.Types.Int -> GHC.Base.String
  {- Arity: 2, Strictness: <L,A><L,1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ (w :: Util.AST) (w1 :: GHC.Types.Int) ->
                 AVRGen.$wpromoteByteToInt w1) -}
211df7cbbfcb5f38e959b47715309a0f
  promoteByteToInt' :: Util.AST -> GHC.Types.Int -> GHC.Base.String
  {- Arity: 2, Strictness: <L,A><L,1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ (w :: Util.AST) (w1 :: GHC.Types.Int) ->
                 AVRGen.$wpromoteByteToInt' w1) -}
bb52d69f11534aa0d13a90d4cb63a2d6
  setUpFunctionCall :: SymbolTable.SymbolTable -> GHC.Base.String
  {- Arity: 1, Strictness: <S(SS),1*U(U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: SymbolTable.SymbolTable) ->
                 case w of ww { SymbolTable.SymTab ww1 ww2 ->
                 AVRGen.$wsetUpFunctionCall ww1 ww2 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

