
==================== FINAL INTERFACE ====================
2016-12-01 05:15:03.718195925 UTC

interface main@main:AVRGen 8001
  interface hash: 5773db0a1011636020671ee906c06c26
  ABI hash: f150f932d111b86d5fc7208641880b38
  export-list hash: fbcf6dba1a337f26b0d11621d5814113
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 6ea86ecbb747c8bfd1b624d46b10840a
  sig of: Nothing
  used TH splices: False
  where
exports:
  AVRGen.avrCodeGen
  AVRGen.avrPop
  AVRGen.correctName
  AVRGen.evaluateParams
  AVRGen.functionLoadParams
  AVRGen.helpLoadMethodReturnValue
  AVRGen.helpStoreMethodParams
  AVRGen.numBytesInParameters
  AVRGen.promote
  AVRGen.promoteByteToInt
  AVRGen.promoteByteToInt'
  AVRGen.setUpFunctionCall
module dependencies: SymbolTable TypeCheck Util
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.0.0*
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  SymbolTable d23a60d8b7f5d4c4a5976c5077e50e04
  exports: 5fca622cbe27c3102def4ca0ee895dcb
  SymTab 7d7251913b95eb034f02a8ee13297fe0
  SymbolTable 8e86e5b3dc08c88d59b8ccc5a39fa69b
  lookupParamOffset db0a4f91537fffac386fb08f6ab33144
  lookupTypeSig 9116ce4e9ab33670b1ca8ce8a4f164f9
  popScope 2d2b4312dc5456c6758da373bee3b506
  pushScope 85518b141e07ca4962860b0d1b41ba82
  setProgScope d2a0079e5d163368b60beffb614e14e2
import  -/  TypeCheck 1a9269d52d12920af15a144477aba775
  exports: cd233e695f946e972b45b525ef28d4a0
  tCheck 01ab408dfa4b1d54f00e84132b495793
import  -/  Util 8289d5fba27cd9a7e4a3433d9fbc0162
  exports: 3eb83b1dfe1a017918c549046bcbf987
  AST 0922ba89a2bf8d0d1eaf0fa9b00bd723
  Add 515f69eb4472a971ced18ff0f48f3794
  Body eddbe3a9df01a05af6ea92e4cb4839f5
  Boolean e2891a9846a2a21f293b72bd4dfb34b2
  BooleanType cf03760e3b2165174f2f5855eafed2b6
  ButtonLiteral 9c9f6854fff4e9415910775f82d35538
  ByteCast ac3eea579fcde6d8c8c959e0e4ad0e07
  ByteType 14e15c9fa66d466dcc83a3da6ad80657
  CheckButton 47daa56f84afe656ea297c20137651d9
  Class e84484e29a7277ca76a45ebc7077c13b
  ColorLiteral 9d411226df9c53891036aae224c2dd17
  Delay 843bc012ec3eaa2f87319779ccf3cecb
  Epsilon 38d8f7196927c99ef03bb34a8df88b91
  GetPixel ecf43aaa0a1a6547b3b8d9de7a1facb4
  Identifier 5e3bc4a7903a5a841cef3e52e96f9fce
  If b98e10f1d130320e3861be519c83419b
  Instance 6342d3e34b7f30df051e39bae5d22315
  IntLiteral 26cab683dd4e6999a067cd3d327cafed
  IntType 21e4510bfd39bc0c74f42b840453825b
  Invoke 7dd0040a7a76a6ff0ea4de299c589bb9
  LessThan 00f27da42fb577db713b38ac4b8affc8
  LogicalAnd dfe304d12d1ab6af8ae84b6a337fe9e7
  LogicalEqual bbddc98664e4f93df3650ed87de26644
  LogicalNot fb176bd1fca803e74294b51e99fdaa89
  MainClass 73a984d48280a59b690f6f989bab7bcb
  MeggyColorType 7e123fff91debb659f2953c68a1538a0
  Method cd446c762db4b62d61687f44decb8eb2
  Mul 245e66c045a4042451fbb3f863dea4d3
  ParenExp 16b9861566fb16c2a1be163550ce7c6b
  Prog 2222df4cb20b83d0437a5eff78700ea9
  Return 9be576aa84c82f264789dc7c28fffca0
  SetPixel 9e46826c901dc53f166e4ec4cb4b2236
  Sub cff6141839bc15187b084949f607568d
  TS 1f65413cd086a2bb7ca29e0abb58494b
  ToneLiteral 361684a0b010a1e88375abb9b57665e7
  ToneStart 77e3f73c2eddef19c6c3fa971572ca20
  Type 216c38e075746053d42eb4f61425ba46
  UnaryMinus 803a20cfb8893ffdd30438d2d5d1b9b7
  VoidType b518a11a63ca951d702e23efc6143ce0
  While e7a47a398bdcaaaae9609a347e2c82a6
  footer 0ef4b2f963519743f3b4e54014026887
  header c2ba5ad3d39353f7f80f48efeb4425dd
5b282318806337e1f39942dfbde4440f
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   AVRGen.$trModule2
                   AVRGen.$trModule1) -}
164c1366a6cdf18b222822b2439a199e
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "AVRGen"#) -}
1cb0301bf5b013327cb42e7287d6cc16
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
6fd0d754d953feb6dcd3c2ac7e042fbd
  $wavrCodeGen ::
    Util.AST
    -> SymbolTable.SymbolTable
    -> GHC.Types.Int
    -> (# GHC.Types.Int, GHC.Base.String #)
  {- Arity: 3, Strictness: <S,1*U><L,U(U,U)><L,U>, Inline: [0] -}
a9c95373d11239311a7c830a0ce70e1d
  $wevaluateParams ::
    [Util.AST]
    -> SymbolTable.SymbolTable
    -> GHC.Types.Int
    -> (# GHC.Types.Int, GHC.Base.String #)
  {- Arity: 3, Strictness: <S,1*U><L,U(U,U)><L,U>, Inline: [0] -}
4a49028ecdea6e7271eeb333021b811c
  $wnumBytesInParameters ::
    [(GHC.Base.String, Util.Type)] -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>, Inline: [0] -}
b9383e5e404bcba5250e5f5ca778b1a9
  $wpromoteByteToInt :: GHC.Types.Int -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,1*U(U)>, Inline: [0] -}
9e3b3a76d482781f96e90fd0a229cb86
  $wpromoteByteToInt' :: GHC.Types.Int -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,1*U(U)>, Inline: [0] -}
d3c7d3b0071267a07fa090a79f7cedc8
  $wsetUpFunctionCall ::
    SymbolTable.Scope -> [GHC.Base.String] -> GHC.Base.String
  {- Arity: 2, Strictness: <S,U><S,U>, Inline: [0] -}
1aa3185b83da28fb7f34a071e98e5b6d
  avrCodeGen ::
    (Util.AST, SymbolTable.SymbolTable)
    -> GHC.Types.Int -> (GHC.Types.Int, GHC.Base.String)
  {- Arity: 2, Strictness: <S(SL),1*U(1*U,U(U,U))><L,U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: (Util.AST, SymbolTable.SymbolTable))
                   (w1 :: GHC.Types.Int) ->
                 case w of ww { (,) ww1 ww2 ->
                 case AVRGen.$wavrCodeGen ww1 ww2 w1 of ww3 { (#,#) ww4 ww5 ->
                 (ww4, ww5) } }) -}
4111f810cc7d8ec94efc4b62a6cffa62
  avrPop ::
    Util.Type -> GHC.Types.Int -> GHC.Types.Int -> GHC.Base.String
  {- Arity: 3, Strictness: <S,1*U><L,1*U(U)><L,1*U(U)> -}
2ea7be731a6e859b670c81bad86fb168
  correctName :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
4b50ddcece152b6c15f7923b5afdf266
  evaluateParams ::
    ([Util.AST], SymbolTable.SymbolTable)
    -> GHC.Base.String
    -> GHC.Types.Int
    -> (GHC.Types.Int, GHC.Base.String)
  {- Arity: 3, Strictness: <S(SL),1*U(1*U,U(U,U))><L,A><L,U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: ([Util.AST], SymbolTable.SymbolTable))
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Types.Int) ->
                 case w of ww { (,) ww1 ww2 ->
                 case AVRGen.$wevaluateParams ww1 ww2 w2 of ww3 { (#,#) ww4 ww5 ->
                 (ww4, ww5) } }) -}
4e1f665853ad774c005df64ced89a124
  functionLoadParams ::
    [(GHC.Base.String, Util.Type)] -> GHC.Types.Int -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U(U)> -}
4468e5e24187d76c45401b5ce7d53efe
  helpLoadMethodReturnValue :: Util.Type -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ret_type :: Util.Type) ->
                 case ret_type of wild {
                   DEFAULT -> AVRGen.helpLoadMethodReturnValue3
                   Util.IntType -> AVRGen.helpLoadMethodReturnValue2
                   Util.VoidType -> AVRGen.helpLoadMethodReturnValue1 }) -}
95be2657ae75bd548b087fefc9eb3846
  helpLoadMethodReturnValue1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "    # Nothing to return -> Void return type\n"#) -}
ab2abd8ccb53c209ab15af9bcc322636
  helpLoadMethodReturnValue2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "    # load a two byte expression off stack\n\
                   \    pop r24\n\
                   \    pop r25\n"#) -}
47f7a9b12c999759f34f913aa63d804b
  helpLoadMethodReturnValue3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "    # load a one byte expression off stack\n\
                   \    pop r24\n"#) -}
f166b6e400e73f840ca7bc6a96081f4d
  helpStoreMethodParams ::
    [(GHC.Base.String, Util.Type)]
    -> SymbolTable.SymbolTable -> GHC.Types.Int -> GHC.Base.String
  {- Arity: 3, Strictness: <S,1*U><L,1*U(U,U)><L,1*U(U)> -}
6ec0af0c68d6e9ea28d710c6fe1b774c
  numBytesInParameters ::
    [(GHC.Base.String, Util.Type)] -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U(U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: [(GHC.Base.String, Util.Type)]) (w1 :: GHC.Types.Int) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 case AVRGen.$wnumBytesInParameters w ww1 of ww2 { DEFAULT ->
                 GHC.Types.I# ww2 } }) -}
b16600a550ba5b9a6dd4be5c0d4be9bb
  promote :: GHC.Types.Int -> GHC.Types.Int -> GHC.Base.String
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U(U)> -}
36fced310a2a140dd637798b57a2bc7a
  promoteByteToInt :: Util.AST -> GHC.Types.Int -> GHC.Base.String
  {- Arity: 2, Strictness: <L,A><L,1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ (w :: Util.AST) (w1 :: GHC.Types.Int) ->
                 AVRGen.$wpromoteByteToInt w1) -}
c65dca3e6cb482382a8756abd85fc082
  promoteByteToInt' :: Util.AST -> GHC.Types.Int -> GHC.Base.String
  {- Arity: 2, Strictness: <L,A><L,1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ (w :: Util.AST) (w1 :: GHC.Types.Int) ->
                 AVRGen.$wpromoteByteToInt' w1) -}
1e0d23f327e59235c5ad9153c0d3e26c
  setUpFunctionCall :: SymbolTable.SymbolTable -> GHC.Base.String
  {- Arity: 1, Strictness: <S(SS),1*U(U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: SymbolTable.SymbolTable) ->
                 case w of ww { SymbolTable.SymTab ww1 ww2 ->
                 AVRGen.$wsetUpFunctionCall ww1 ww2 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

